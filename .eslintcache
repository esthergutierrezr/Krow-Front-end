[{"/home/luis/Documents/Wild Code School/Project Krow/project_krow/Krow_dev/app-frontend/src/components/Login/Login.js":"1","/home/luis/Documents/Wild Code School/Project Krow/project_krow/Krow_dev/app-frontend/src/components/Login/StyleLogin.jsx":"2"},{"size":2538,"mtime":1613042189422,"results":"3","hashOfConfig":"4"},{"size":3968,"mtime":1613042571115,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"8"},"1so63ew",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/luis/Documents/Wild Code School/Project Krow/project_krow/Krow_dev/app-frontend/src/components/Login/Login.js",["11","12"],"import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport Cookies from \"js-cookie\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport KrowLogo from \"../Style/SVG/KrowLogo.svg\";\nimport {\n  LoginForm,\n  Logo,\n  Container,\n  LoginText,\n  RegisterLink,\n  PasswordLink,\n  GuestLink,\n} from \"./StyleLogin\";\n\nfunction Login() {\n  const [state, setState] = useState({});\n  const { setUser, setAuth } = useContext(AuthContext);\n  const history = useHistory();\n  const { register, errors, handleSubmit } = useForm({});\n\n  const onSubmit = (data) => {\n    axios\n      .post(\"/auth/login\", { email: data.email, password: data.password })\n      .then((response) => {\n        setUser(response.data.foundUser);\n        setAuth(true);\n        Cookies.set(\"authToken\", response.data.token);\n        history.push(\"/\");\n      });\n  };\n\n  return (\n    <div className=\"bg\">\n      <Logo src={KrowLogo} alt=\"Krow-logo\" />\n      <Container>\n        <LoginForm onSubmit={handleSubmit(onSubmit)}>\n          <input\n            placeholder=\"Email*\"\n            type=\"email\"\n            name=\"email\"\n            value={state.email}\n            ref={register({\n              required: true,\n            })}\n          />\n          <br />\n          <input\n            placeholder=\"Password*\"\n            name=\"password\"\n            type=\"password\"\n            value={state.password}\n            ref={register({\n              required: true,\n              minLength: 8,\n              pattern: /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/i,\n            })}\n          />\n          {errors.password && (\n            <p>\n              Password must have at least 8 characters, 1 special character and\n              1 number{\" \"}\n            </p>\n          )}\n          <br />\n          <button type=\"submit\">Login</button>\n          <br />\n          <br />\n          <LoginText>\n            <p>Not a Member yet?</p>\n            <Link to=\"/auth/signup\">\n              <RegisterLink>Please register</RegisterLink>\n            </Link>\n            <br />\n            <Link to=\"/password/forget\">\n              <PasswordLink>\n                Forget your Password\n                <hr />\n              </PasswordLink>\n            </Link>\n            <br />\n            <GuestLink>Continue as Guest</GuestLink>\n          </LoginText>\n          <br />\n        </LoginForm>\n      </Container>\n    </div>\n  );\n}\nexport default Login;\n","/home/luis/Documents/Wild Code School/Project Krow/project_krow/Krow_dev/app-frontend/src/components/Login/StyleLogin.jsx",[],{"ruleId":"13","severity":1,"message":"14","line":19,"column":17,"nodeType":"15","messageId":"16","endLine":19,"endColumn":25},{"ruleId":"17","severity":1,"message":"18","line":64,"column":23,"nodeType":"19","endLine":64,"endColumn":28,"fix":"20"},"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","react/jsx-one-expression-per-line","`{\" \"}` must be placed on a new line","JSXExpressionContainer",{"range":"21","text":"22"},[1838,1843],"\n{\" \"}"]