[{"/Users/leonvandeklundert/WILD/projects/project-3/app-frontend/src/components/Navigation/BottomNav.js":"1","/Users/leonvandeklundert/WILD/projects/project-3/app-frontend/src/components/Signup/Signup.js":"2"},{"size":2279,"mtime":1611919029271,"results":"3","hashOfConfig":"4"},{"size":3887,"mtime":1611919698478,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1532lei",{"filePath":"8","messages":"9","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"10"},"/Users/leonvandeklundert/WILD/projects/project-3/app-frontend/src/components/Navigation/BottomNav.js",[],"/Users/leonvandeklundert/WILD/projects/project-3/app-frontend/src/components/Signup/Signup.js",["11","12","13","14","15","16"],"import React, { useState, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-input-2\";\nimport Cookies from \"js-cookie\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport \"react-phone-input-2/lib/style.css\";\nimport \"./Signup.css\";\nimport KrowLogo from \"../Style/SVG/KrowLogo.svg\";\nimport { Logo, Register } from \"./SignUpStyle\";\nimport { Input } from \"../Style/Utilities\";\n// import { LaptopBg } from \"../Style/Backgrounds\";\n\nfunction Signup() {\n  const { register, errors, handleSubmit } = useForm();\n  const { setUser, setAuth } = useContext(AuthContext);\n  const history = useHistory();\n  const [state, setState] = useState({\n    phone: \"\",\n  });\n\n  const onSubmit = (data) => {\n    console.log(\"data: \", data);\n    axios\n      .post(\"/auth/signup\", data)\n      .then(() => {\n        const loginInfo = { email: data.email, password: data.password };\n        axios.post(\"/auth/login\", loginInfo).then((response) => {\n          console.log(loginInfo);\n          console.log(\"on login: \", response);\n          setUser(response.data.foundUser);\n          setAuth(true);\n          Cookies.set(\"authToken\", response.data.token);\n          history.push(\"/\");\n        });\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div className=\"bg\">\n      <Logo src={KrowLogo} alt=\"Krow-logo\" />\n      <div className=\"form-container\">\n        <form className=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder={\n              !errors.email ? \"Email*\" : \"Your email is required to login later\"\n            }\n            ref={register({ required: true, maxLength: 80 })}\n          />\n          <PhoneInput\n            inputStyle={{\n              backgroundColor: \"#323232\",\n              border: \"none\",\n              color: \"#888\",\n              borderRadius: \"8px\",\n              opacity: \".9\",\n              maxWidth: \"285px\",\n              height: \"54.2px\"\n            }}\n            buttonStyle={{\n              backgroundColor: \"#323232\",\n              border: \"none\",\n              color: \"#888\",\n              borderRadius: \"8px\"\n            }}\n            dropdownStyle={{\n              backgroundColor: \"#323232\",\n              border: \"none\",\n              color: \"#888\"\n            }}\n            inputProps= {{\n              name: 'phone',\n              required: true,\n              autoFocus: true\n            }}\n            value={state.phone}\n            onChange={(phone) => setState({ phone })}\n            type=\"tel\"\n            country=\"pt\"\n            name=\"phone\"\n            placeholder={!errors.phone ? \"Phone Number*\" : \"Your phone number\"}\n          />\n\n          <Input\n            className=\"hidden\"\n            value={state.phone}\n            type=\"tel\"\n            name=\"phoneNumber\"\n            placeholder={\n              !errors.phone ? \"Phone Number*\" : \"Your phone number is required\"\n            }\n            ref={register({ required: true, maxLength: 80 })}\n          />\n          <Input\n            type=\"text\"\n            name=\"fullName\"\n            placeholder={!errors.fullName ? \"Full Name*\" : \"Full Name\"}\n            ref={register({ required: true, maxLength: 30 })}\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder={\n              !errors.password ? \"Create Password*\" : \"Password is required\"\n            }\n            ref={register({\n              minLength: 8,\n              required: true,\n              pattern: /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/i,\n            })}\n          />\n            <Register type=\"submit\" value=\"Register\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n",{"ruleId":"17","severity":1,"message":"18","line":24,"column":5,"nodeType":"19","messageId":"20","endLine":24,"endColumn":16},{"ruleId":"17","severity":1,"message":"18","line":30,"column":11,"nodeType":"19","messageId":"20","endLine":30,"endColumn":22},{"ruleId":"17","severity":1,"message":"18","line":31,"column":11,"nodeType":"19","messageId":"20","endLine":31,"endColumn":22},{"ruleId":"17","severity":1,"message":"18","line":38,"column":25,"nodeType":"19","messageId":"20","endLine":38,"endColumn":38},{"ruleId":"21","severity":1,"message":"22","line":75,"column":23,"nodeType":"23","fix":"24"},{"ruleId":"25","severity":1,"message":"26","line":116,"column":13,"nodeType":"27","endLine":116,"endColumn":56,"fix":"28"},"no-console","Unexpected console statement.","MemberExpression","unexpected","react/jsx-equals-spacing","There should be no space after '='","JSXAttribute",{"range":"29","text":"30"},"react/jsx-indent","Expected indentation of 10 space characters but found 12.","JSXOpeningElement",{"range":"31","text":"32"},[2467,2468],"",[3760,3772],"          "]